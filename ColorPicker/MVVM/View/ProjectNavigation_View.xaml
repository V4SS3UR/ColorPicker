<UserControl x:Class="ColorPicker.MVVM.View.ProjectNavigation_View"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:local="clr-namespace:ColorPicker.MVVM.View"
             xmlns:vm="clr-namespace:ColorPicker.MVVM.ViewModel"
             xmlns:m="clr-namespace:ColorPicker.MVVM.Model"
             xmlns:fade="clr-namespace:VsrFade.Controls;assembly=VsrFade"
             mc:Ignorable="d"
             d:DesignHeight="400" d:DesignWidth="600">

    <UserControl.DataContext>
        <vm:ProjectNavigation_ViewModel />
    </UserControl.DataContext>

    <Grid Background="Transparent">

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Border Grid.Column="0" Width="90" Background="#586879">

            <Border.LayoutTransform>
                <ScaleTransform ScaleX="1" ScaleY="1"  />
            </Border.LayoutTransform>

            <Border.Style>
                <Style TargetType="Border">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=PanelToggleButton, Path=IsChecked}" Value="true">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation                                            
                                            Storyboard.TargetProperty="(LayoutTransform).(ScaleTransform.ScaleX)"
                                            To="0"
                                            Duration="0:0:0.300">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseInOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation                                                                            
                                            Storyboard.TargetProperty="(LayoutTransform).(ScaleTransform.ScaleX)"                                  
                                            To="1"
                                            Duration="0:0:0.300" >
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseInOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            
            <Border.Resources>
                <Style TargetType="Path">
                    <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality" />
                    <Setter Property="Stretch" Value="Uniform" />
                    <Setter Property="Fill" Value="White" />
                    <Setter Property="Opacity" Value="0.5" />
                    <Setter Property="Height" Value="18" />
                </Style>
                <Style TargetType="fade:FadeButton">
                    <Setter Property="Background" Value="#6FFF" />
                    <Setter Property="FocusedBackground" Value="#AFFF" />
                    <Setter Property="DisabledBackgroundColor" Value="#8555" />
                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                    <Setter Property="Height" Value="25" />
                    <Setter Property="Margin" Value="2" />
                    <Setter Property="CornerRadius" Value="5" />
                </Style>
                <Style TargetType="fade:FadeRadioButton">
                    <Setter Property="Background" Value="#5888" />
                    <Setter Property="DisabledBackgroundColor" Value="#8555" />
                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                    <Setter Property="Height" Value="40" />
                </Style>
                <Style TargetType="TextBlock" x:Key="CaptionTextBlock">
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="HorizontalAlignment" Value="Center" />
                    <Setter Property="TextAlignment" Value="Center" />
                    <Setter Property="FontSize" Value="12" />
                    <Setter Property="FontWeight" Value="Medium" />
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="TextWrapping" Value="WrapWithOverflow" />
                    <Setter Property="Width" Value="auto" />
                    <Setter Property="Margin" Value="0,5,0,0" />
                </Style>
                <Style TargetType="TextBox" x:Key="CaptionTextBox">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="HorizontalAlignment" Value="Center" />
                    <Setter Property="TextAlignment" Value="Center" />
                    <Setter Property="FontSize" Value="12" />
                    <Setter Property="FontWeight" Value="Medium" />
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="TextWrapping" Value="WrapWithOverflow" />
                    <Setter Property="Width" Value="auto" />
                    <Setter Property="Margin" Value="0,5,0,0" />
                </Style>
                <Style TargetType="StackPanel">
                    <Setter Property="Opacity" Value="1" />
                    <Style.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.3" />
                        </Trigger>
                    </Style.Triggers>
                </Style>


                <Style TargetType="{x:Type ContextMenu}">
                    <Setter Property="SnapsToDevicePixels" Value="True" />
                    <Setter Property="OverridesDefaultStyle" Value="True" />
                    <Setter Property="Grid.IsSharedSizeScope" Value="true" />
                    <Setter Property="HasDropShadow" Value="True" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ContextMenu}">
                                <Border x:Name="Border" Background="#FF69737F" BorderBrush="#FF939CAC" BorderThickness="1">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="HasDropShadow" Value="true">
                                        <Setter TargetName="Border" Property="Padding" Value="3" />
                                        <Setter TargetName="Border" Property="CornerRadius" Value="4" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="ItemContainerStyle">
                        <Setter.Value>
                            <Style TargetType="{x:Type MenuItem}">
                                <Setter Property="Background" Value="#5555"/>
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="Padding" Value="2"/>                           
                            </Style>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Border.Resources>            
            

            <DockPanel Grid.Column="0">
                
                <fade:FadeButton DockPanel.Dock="Top" Command="{Binding AddProjectCommand}">
                    <Path Data="{StaticResource Add}" />
                </fade:FadeButton>

                <ScrollViewer VerticalScrollBarVisibility="Auto">
                    <ItemsControl x:Name="Navigator" ItemsSource="{Binding ProjectCollection}">

                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>

                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <fade:FadeRadioButton x:Name="ProjectRadioButton" GroupName="ProjectNavigation" Cursor="Hand"
                                                      Checked="ProjectRadioButton_Checked">
                                    <TextBlock Text="{Binding Name}" TextWrapping="Wrap" Style="{StaticResource CaptionTextBlock}" />

                                    <fade:FadeRadioButton.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="Supprimer" x:Name="DeleteContextMenuItem"
                                                      Click="DeleteContextMenuItem_Click">
                                                <MenuItem.Icon>
                                                    <Path Data="{StaticResource Trashcan}" Height="14" Stretch="Uniform" Fill="White" Margin="1"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                        </ContextMenu>
                                    </fade:FadeRadioButton.ContextMenu>

                                </fade:FadeRadioButton>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>    

                    </ItemsControl>
                </ScrollViewer>
            </DockPanel>
        </Border>

        <fade:FadeToggleButton x:Name="PanelToggleButton" Grid.Column="1" 
                               Background="#FF59697A" FocusedBackground="#FF59697A"
                               VerticalAlignment="Stretch" HorizontalAlignment="Left">

            <fade:FadeToggleButton.Style>
                <Style TargetType="fade:FadeToggleButton">
                    <Setter Property="Width" Value="20"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation                                            
                                            Storyboard.TargetProperty="Width"
                                            To="15"
                                            Duration="0:0:0.300">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseInOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation                                            
                                            Storyboard.TargetProperty="Width"
                                            To="20"
                                            Duration="0:0:0.300">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseInOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </fade:FadeToggleButton.Style>


            <fade:FadeToggleButton.Content>
                <Path Data="{StaticResource Left}" Stretch="Uniform" Fill="#5FFF" Margin="2" RenderTransformOrigin="0.5,0.5"/>
            </fade:FadeToggleButton.Content>
            <fade:FadeToggleButton.CheckedContent>
                <Path Data="{StaticResource Right}" Stretch="Uniform" Fill="#5FFF" Margin="2" RenderTransformOrigin="0.5,0.5"/>
            </fade:FadeToggleButton.CheckedContent>
        </fade:FadeToggleButton>

        <Border Grid.Column="2">
            <Border.Style>
                <Style TargetType="Border">
                    <Setter Property="Background" Value="Transparent" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding SelectedProject}" Value="{x:Null}">
                            <Setter Property="Background" Value="LightGray" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>

            <ContentPresenter Content="{Binding CurrentView, Mode=TwoWay}" />
        </Border>

        

    </Grid>
</UserControl>